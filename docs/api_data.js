define({ "api": [  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./docs/main.js",    "group": "_Users_shaychan_Code_di_ce_acr_server_docs_main_js",    "groupTitle": "_Users_shaychan_Code_di_ce_acr_server_docs_main_js",    "name": ""  },  {    "type": "get",    "url": "/status/<:jobId>",    "title": "check status",    "version": "1.0.0",    "description": "<p>Returns the status of a job.</p>",    "name": "auto_straighten_job_get",    "group": "autoStraighten",    "parameter": {      "fields": {        "URL Param": [          {            "group": "URL Param",            "type": "string",            "optional": false,            "field": "jobId",            "description": "<p>The jobId to get status for.</p>"          }        ]      },      "examples": [        {          "title": "HTTP Usage Template:",          "content": "GET /status/<:jobId>  HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key",          "type": "http"        },        {          "title": "Curl Usage:",          "content": "curl -H \"authorization: Bearer $token\" -H \"content-type:application/json\" -H \"x-api-key:$x-api-key\" -X GET https://image.adobe.io/lrService/status/<:jobId>",          "type": "curl"        }      ]    },    "success": {      "examples": [        {          "title": "Pending Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"pending\"\n    }\n  ]\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Succeeded Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"succeeded\",\n      \"_links\":{\n        \"self\":\n          {\n            \"href\":\"/some_project/OUTPUT/photo.jpg\",\n            \"storage\":\"adobe\"\n          }\n      }\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Failed Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"failed\",\n      \"errorDetails\":\"request parameters didn't validate\"\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Success-Response Templated:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n    \"jobId\":\"<:jobId>\",\n    \"created\":\"<YYYY-DD-MMThh:mm:ss.mmmmm:Z>\",\n    \"modified\":\"<YYYY-DD-MMThh:mm:ss.mmmmm:Z>\",\n    \"outputs\":[\n       {\n         \"input\":\"<input>\",\n         \"status\":\"<status>\",\n         \"_links\":{\n           \"self\":{\n             \"href\":\"<href>\",\n             \"storage\":\"<storage>\"\n           }\n         }\n       }\n    ],\n    \"_links\":{\n       \"self\":{\n         \"href\":\"https://image.adobe.io/lrService/status/<:jobId>\"\n       }\n    }\n}",          "type": "json"        }      ],      "fields": {        "Success 202": [          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "jobId",            "description": "<p>the job's id requested</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "created",            "description": "<p>timestamp</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "modified",            "description": "<p>timestamp</p>"          },          {            "group": "Success 202",            "type": "array",            "optional": false,            "field": "outputs",            "description": "<p>array of outputs</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.input",            "description": "<p>the original input file path</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.status",            "description": "<p>the child job status</p>  <ul>    <li>pending - request has been accepted and is waiting to start</li>    <li>running - the child job is running</li>    <li>succeeded - the child job has succeeded</li>    <li>failed - the child job has failed</li>  </ul>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "_links",            "description": "<p>include hrefs that client can use to track status</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "_links.self",            "description": "<p>the relation type</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "_links.self.href",            "description": "<p>the link to track status</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "outputs._links",            "description": "<p>include hrefs of the output location</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "outputs._links.self",            "description": "<p>the relation type</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs._links.self.href",            "description": "<p>the output location</p>"          },          {            "group": "Success 202",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\"",              "\"azure\"",              "\"dropbox\""            ],            "optional": false,            "field": "outputs._links.self.storage",            "description": "<p>the storage of output</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.details",            "description": "<p>Description of the exact error that is reported by the requested job. Will appear in the response only if there is an error.</p>"          }        ]      }    },    "filename": "./docs-src/get-autostraighten-create.js",    "groupTitle": "autoStraighten",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "authorization",            "description": "<p>Authorization value.</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "x-api-key",            "description": "<p>a client id</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/autoStraighten",    "title": "post job",    "version": "1.0.0",    "description": "<p>Initiates an asynchronous job to auto straighten an image</p>",    "name": "auto_straighten_post",    "group": "autoStraighten",    "parameter": {      "examples": [        {          "title": "HTTP Usage Templated:",          "content": "POST /autoStraighten HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\n{\n  \"inputs\":{\n    \"href\": \"<presigned_getURL> or <cc_storage_location>\",\n    \"storage\": \"<storage>\"\n  },\n  \"outputs\": [\n    {\n      \"href\": \"<presigned_getURL> or <cc_storage_location\",\n      \"storage\": \"<storage>\",\n      \"type\": \"<type>\",\n      \"overwrite\":<overwrite>\n    }\n  ]\n}",          "type": "http"        },        {          "title": "HTTP Example(CC Asset):",          "content": "POST /autoStraighten HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\n{\n  \"inputs\":{\n    \"href\": \"/files/input.jpg\",\n    \"storage\": \"adobe\"\n  },\n  \"outputs\": [\n    {\n      \"href\": \"/files/output.jpg\",\n      \"storage\": \"adobe\",\n      \"type\": \"image/jpeg\",\n      \"overwrite\": true\n    }\n  ]\n}",          "type": "http"        },        {          "title": "HTTP Example(External Asset):",          "content": "POST /autoStraighten HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\n{\n  \"inputs\":{\n    \"href\": \"https://some-bucket-us-east-1.amazonaws.com/s3_presigned_getObject...\",\n    \"storage\": \"external\"\n  },\n  \"outputs\": [\n    {\n      \"href\": \"https://some-bucket-us-east-1.amazonaws.com/s3_presigned_putObject..\",\n      \"storage\": \"external\",\n      \"type\": \"image/jpeg\",\n      \"overwrite\": true\n    }\n  ]\n}",          "type": "http"        },        {          "title": "Curl Usage:",          "content": "curl -H \"authorization: Bearer $token\" -H \"Content-Type:application/json\" -H \"x-api-key:$x-api-key\" -X POST -d '{\"inputs\":{\"href\":\"<href>\",\"storage\":\"<storage>\"},\"outputs\":[{\"href\":\"<href>\",\"storage\":\"<storage>\",\"type\":\"<type>\"}]}' https://image.adobe.io/lrService/autoStraighten",          "type": "curl"        }      ],      "fields": {        "Request": [          {            "group": "Request",            "type": "hash",            "optional": false,            "field": "inputs",            "description": "<p>A hash describing an input image to edit. The input object will be one of 'external', 'adobe', 'azure' or 'dropbox'</p>"          },          {            "group": "Request",            "type": "string",            "optional": false,            "field": "inputs.href",            "description": "<p>Either a Creative Cloud assets path for storage=&quot;adobe&quot; OR a presignedGetURL</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\"",              "\"azure\"",              "\"dropbox\""            ],            "optional": true,            "field": "inputs.storage",            "defaultValue": "adobe",            "description": "<p>is the asset stored on Adobe's cloud or an external service (like AWS S3)</p>"          },          {            "group": "Request",            "type": "array",            "optional": false,            "field": "outputs",            "description": "<p>array of output objects</p>"          },          {            "group": "Request",            "type": "string",            "optional": false,            "field": "outputs.href",            "description": "<p>Either a Creative Cloud assets path for storage=&quot;adobe&quot; OR a presignedPutURL</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\"",              "\"azure\"",              "\"dropbox\""            ],            "optional": true,            "field": "outputs.storage",            "defaultValue": "adobe",            "description": "<p>see the input.storage key.</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"image/jpeg\"",              "\"image/x-adobe-dng\"",              "\"image/png\""            ],            "optional": true,            "field": "outputs.type",            "defaultValue": "image/jpeg",            "description": "<p>outputs.type desired image format.</p>"          },          {            "group": "Request",            "type": "boolean",            "allowedValues": [              "true",              "false"            ],            "optional": true,            "field": "outputs.overwrite",            "defaultValue": "true",            "description": "<p>outputs.overwrite=true if the output file already exists should it be overwritten. Will eventually support eTags</p>"          }        ]      }    },    "filename": "./docs-src/post-autostraighten-create.js",    "groupTitle": "autoStraighten",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "authorization",            "description": "<p>Authorization value.</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "x-api-key",            "description": "<p>a client id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 202": [          {            "group": "Success 202",            "type": "json",            "optional": false,            "field": "_links",            "description": "<p>hrefs the client can use to get status of the asynchronous job</p>"          }        ]      },      "examples": [        {          "title": "Success-Response Templated:",          "content": "HTTP/1.1 202 ACCEPTED\nContent-Type: application/json\n{\n  \"_links\": {\n     \"self\" :{\n       \"href\" : \"https://image.adobe.io/lrService/status/<:jobId>\"\n     }\n  }\n}",          "type": "json"        },        {          "title": "Success-Response Example:",          "content": "HTTP/1.1 202 ACCEPTED\nContent-Type: application/json\n{\n  \"_links\": {\n     \"self\" :{\n       \"href\" : \"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n     }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "string",            "optional": false,            "field": "type",            "description": "<p>a machine-readable error code</p>"          },          {            "group": "Error 4xx",            "type": "string",            "optional": false,            "field": "title",            "description": "<p>short, human-readable summary of the problem</p>"          },          {            "group": "Error 4xx",            "type": "array",            "optional": true,            "field": "details",            "description": "<p>further descriptions of the exact error where <code>details</code> is substituted for a specific issue</p>"          }        ]      },      "examples": [        {          "title": "Error-Response Templeted:",          "content": "HTTP/1.1 <Status_Code> <Reason>\nContent-Type: application/json\n{\n  \"type\": \"<errorCode>\",\n  \"title\": \"<errorDescription>\",\n  \"<details>\": [\n    {\n      \"name\":\"<paramName>\",\n      \"reason\":\"<error>\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "Example FileExistsError:",          "content": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n{\n  \"type\": \"FileExistsError\",\n  \"title\": \"File does not exist\"\n}",          "type": "json"        },        {          "title": "Example InputValidationError:",          "content": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n{\n  \"type\": \"InputValidationError\",\n  \"title\": \"request parameters didn't validate\",\n  \"invalidParams\": [\n    {\n      \"name\":\"storage\",\n      \"reason\":\"value must be either 'adobe' or 'external'\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "Example AuthorizationError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"AuthorizationError\",\n  \"title\": \"Invalid API key or missing auth token\"\n}",          "type": "json"        },        {          "title": "Example MissingAuthTokenError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"MissingAuthTokenError\",\n  \"title\": \"Auth token is missing\"\n}",          "type": "json"        },        {          "title": "Example InvalidAuthTokenError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"InvalidAuthTokenError\",\n  \"title\": \"Auth token is invalid\"\n}",          "type": "json"        },        {          "title": "Example ResourceNotFoundError:",          "content": "HTTP/1.1 404 Not Found\nContent-Type: application/json\n{\n  \"type\": \"ResourceNotFoundError\",\n  \"title\": \"Requested resource was not found\"\n}",          "type": "json"        },        {          "title": "Example InvalidContentTypeError:",          "content": "HTTP/1.1 415 Unsupported Media Type\nContent-Type: application/json\n{\n  \"type\": \"InvalidContentTypeError\",\n  \"title\": \"Invalid content type\"\n}",          "type": "json"        },        {          "title": "Example UndefinedError:",          "content": "HTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n{\n  \"type\": \"UndefinedError\",\n  \"title\": \"Undefined Error\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/status/<:jobId>",    "title": "check status",    "version": "1.0.0",    "description": "<p>Returns the status of a job.</p>",    "name": "auto_tone_job_get",    "group": "autoTone",    "parameter": {      "fields": {        "URL Param": [          {            "group": "URL Param",            "type": "string",            "optional": false,            "field": "jobId",            "description": "<p>The jobId to get status for.</p>"          }        ]      },      "examples": [        {          "title": "HTTP Usage Template:",          "content": "GET /status/<:jobId>  HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key",          "type": "http"        },        {          "title": "Curl Usage:",          "content": "curl -H \"authorization: Bearer $token\" -H \"content-type:application/json\" -H \"x-api-key:$x-api-key\" -X GET https://image.adobe.io/lrService/status/<:jobId>",          "type": "curl"        }      ]    },    "success": {      "examples": [        {          "title": "Pending Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"pending\"\n    }\n  ]\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Succeeded Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"succeeded\",\n      \"_links\":{\n        \"self\":\n          {\n            \"href\":\"/some_project/OUTPUT/photo.jpg\",\n            \"storage\":\"adobe\"\n          }\n      }\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Failed Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"failed\",\n      \"errorDetails\":\"request parameters didn't validate\"\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Success-Response Templated:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n    \"jobId\":\"<:jobId>\",\n    \"created\":\"<YYYY-DD-MMThh:mm:ss.mmmmm:Z>\",\n    \"modified\":\"<YYYY-DD-MMThh:mm:ss.mmmmm:Z>\",\n    \"outputs\":[\n       {\n         \"input\":\"<input>\",\n         \"status\":\"<status>\",\n         \"_links\":{\n           \"self\":{\n             \"href\":\"<href>\",\n             \"storage\":\"<storage>\"\n           }\n         }\n       }\n    ],\n    \"_links\":{\n       \"self\":{\n         \"href\":\"https://image.adobe.io/lrService/status/<:jobId>\"\n       }\n    }\n}",          "type": "json"        }      ],      "fields": {        "Success 202": [          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "jobId",            "description": "<p>the job's id requested</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "created",            "description": "<p>timestamp</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "modified",            "description": "<p>timestamp</p>"          },          {            "group": "Success 202",            "type": "array",            "optional": false,            "field": "outputs",            "description": "<p>array of outputs</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.input",            "description": "<p>the original input file path</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.status",            "description": "<p>the child job status</p>  <ul>    <li>pending - request has been accepted and is waiting to start</li>    <li>running - the child job is running</li>    <li>succeeded - the child job has succeeded</li>    <li>failed - the child job has failed</li>  </ul>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "_links",            "description": "<p>include hrefs that client can use to track status</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "_links.self",            "description": "<p>the relation type</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "_links.self.href",            "description": "<p>the link to track status</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "outputs._links",            "description": "<p>include hrefs of the output location</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "outputs._links.self",            "description": "<p>the relation type</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs._links.self.href",            "description": "<p>the output location</p>"          },          {            "group": "Success 202",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\"",              "\"azure\"",              "\"dropbox\""            ],            "optional": false,            "field": "outputs._links.self.storage",            "description": "<p>the storage of output</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.details",            "description": "<p>Description of the exact error that is reported by the requested job. Will appear in the response only if there is an error.</p>"          }        ]      }    },    "filename": "./docs-src/get-autotone-create.js",    "groupTitle": "autoTone",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "authorization",            "description": "<p>Authorization value.</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "x-api-key",            "description": "<p>a client id</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/autoTone",    "title": "post job",    "version": "1.0.0",    "description": "<p>Initiates an asynchronous job to auto tone an image</p>",    "name": "auto_tone_post",    "group": "autoTone",    "parameter": {      "examples": [        {          "title": "HTTP Usage Templated:",          "content": "POST /autoTone HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\n{\n  \"inputs\":{\n    \"href\": \"<presigned_getURL> or <cc_storage_location>\",\n    \"storage\": \"<storage>\"\n  },\n  \"outputs\": [\n    {\n      \"href\": \"<presigned_getURL> or <cc_storage_location\",\n      \"storage\": \"<storage>\",\n      \"type\": \"<type>\",\n      \"overwrite\":<overwrite>\n    }\n  ]\n}",          "type": "http"        },        {          "title": "HTTP Example(CC Asset):",          "content": "POST /autoTone HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\n{\n  \"inputs\":{\n    \"href\": \"/files/input.jpg\",\n    \"storage\": \"adobe\"\n  },\n  \"outputs\": [\n    {\n      \"href\": \"/files/output.jpg\",\n      \"storage\": \"adobe\",\n      \"type\": \"image/jpeg\",\n      \"overwrite\": true\n    }\n  ]\n}",          "type": "http"        },        {          "title": "HTTP Example(External Asset):",          "content": "POST /autoTone HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\n{\n  \"inputs\":{\n    \"href\": \"https://some-bucket-us-east-1.amazonaws.com/s3_presigned_getObject...\",\n    \"storage\": \"external\"\n  },\n  \"outputs\": [\n    {\n      \"href\": \"https://some-bucket-us-east-1.amazonaws.com/s3_presigned_putObject..\",\n      \"storage\": \"external\",\n      \"type\": \"image/jpeg\",\n      \"overwrite\": true\n    }\n  ]\n}",          "type": "http"        },        {          "title": "Curl Usage:",          "content": "curl -H \"authorization: Bearer $token\" -H \"Content-Type:application/json\" -H \"x-api-key:$x-api-key\" -X POST -d '{\"inputs\":{\"href\":\"<href>\",\"storage\":\"<storage>\"},\"outputs\":[{\"href\":\"<href>\",\"storage\":\"<storage>\",\"type\":\"<type>\"}]}' https://image.adobe.io/lrService/autoTone",          "type": "curl"        }      ],      "fields": {        "Request": [          {            "group": "Request",            "type": "hash",            "optional": false,            "field": "inputs",            "description": "<p>A hash describing an input image to edit. The input object will be one of 'external', 'adobe', 'azure' or 'dropbox'</p>"          },          {            "group": "Request",            "type": "string",            "optional": false,            "field": "inputs.href",            "description": "<p>Either a Creative Cloud assets path for storage=&quot;adobe&quot; OR a presignedGetURL</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\"",              "\"azure\"",              "\"dropbox\""            ],            "optional": true,            "field": "inputs.storage",            "defaultValue": "adobe",            "description": "<p>is the asset stored on Adobe's cloud or an external service (like AWS S3)</p>"          },          {            "group": "Request",            "type": "array",            "optional": false,            "field": "outputs",            "description": "<p>array of output objects</p>"          },          {            "group": "Request",            "type": "string",            "optional": false,            "field": "outputs.href",            "description": "<p>Either a Creative Cloud assets path for storage=&quot;adobe&quot; OR a presignedPutURL</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\"",              "\"azure\"",              "\"dropbox\""            ],            "optional": true,            "field": "outputs.storage",            "defaultValue": "adobe",            "description": "<p>see the input.storage key.</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"image/jpeg\"",              "\"image/x-adobe-dng\"",              "\"image/png\""            ],            "optional": true,            "field": "outputs.type",            "defaultValue": "image/jpeg",            "description": "<p>outputs.type desired image format.</p>"          },          {            "group": "Request",            "type": "boolean",            "allowedValues": [              "true",              "false"            ],            "optional": true,            "field": "outputs.overwrite",            "defaultValue": "true",            "description": "<p>outputs.overwrite=true if the output file already exists should it be overwritten. Will eventually support eTags</p>"          }        ]      }    },    "filename": "./docs-src/post-autotone-create.js",    "groupTitle": "autoTone",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "authorization",            "description": "<p>Authorization value.</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "x-api-key",            "description": "<p>a client id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 202": [          {            "group": "Success 202",            "type": "json",            "optional": false,            "field": "_links",            "description": "<p>hrefs the client can use to get status of the asynchronous job</p>"          }        ]      },      "examples": [        {          "title": "Success-Response Templated:",          "content": "HTTP/1.1 202 ACCEPTED\nContent-Type: application/json\n{\n  \"_links\": {\n     \"self\" :{\n       \"href\" : \"https://image.adobe.io/lrService/status/<:jobId>\"\n     }\n  }\n}",          "type": "json"        },        {          "title": "Success-Response Example:",          "content": "HTTP/1.1 202 ACCEPTED\nContent-Type: application/json\n{\n  \"_links\": {\n     \"self\" :{\n       \"href\" : \"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n     }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "string",            "optional": false,            "field": "type",            "description": "<p>a machine-readable error code</p>"          },          {            "group": "Error 4xx",            "type": "string",            "optional": false,            "field": "title",            "description": "<p>short, human-readable summary of the problem</p>"          },          {            "group": "Error 4xx",            "type": "array",            "optional": true,            "field": "details",            "description": "<p>further descriptions of the exact error where <code>details</code> is substituted for a specific issue</p>"          }        ]      },      "examples": [        {          "title": "Error-Response Templeted:",          "content": "HTTP/1.1 <Status_Code> <Reason>\nContent-Type: application/json\n{\n  \"type\": \"<errorCode>\",\n  \"title\": \"<errorDescription>\",\n  \"<details>\": [\n    {\n      \"name\":\"<paramName>\",\n      \"reason\":\"<error>\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "Example FileExistsError:",          "content": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n{\n  \"type\": \"FileExistsError\",\n  \"title\": \"File does not exist\"\n}",          "type": "json"        },        {          "title": "Example InputValidationError:",          "content": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n{\n  \"type\": \"InputValidationError\",\n  \"title\": \"request parameters didn't validate\",\n  \"invalidParams\": [\n    {\n      \"name\":\"storage\",\n      \"reason\":\"value must be either 'adobe' or 'external'\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "Example AuthorizationError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"AuthorizationError\",\n  \"title\": \"Invalid API key or missing auth token\"\n}",          "type": "json"        },        {          "title": "Example MissingAuthTokenError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"MissingAuthTokenError\",\n  \"title\": \"Auth token is missing\"\n}",          "type": "json"        },        {          "title": "Example InvalidAuthTokenError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"InvalidAuthTokenError\",\n  \"title\": \"Auth token is invalid\"\n}",          "type": "json"        },        {          "title": "Example ResourceNotFoundError:",          "content": "HTTP/1.1 404 Not Found\nContent-Type: application/json\n{\n  \"type\": \"ResourceNotFoundError\",\n  \"title\": \"Requested resource was not found\"\n}",          "type": "json"        },        {          "title": "Example InvalidContentTypeError:",          "content": "HTTP/1.1 415 Unsupported Media Type\nContent-Type: application/json\n{\n  \"type\": \"InvalidContentTypeError\",\n  \"title\": \"Invalid content type\"\n}",          "type": "json"        },        {          "title": "Example UndefinedError:",          "content": "HTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n{\n  \"type\": \"UndefinedError\",\n  \"title\": \"Undefined Error\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/status/<:jobId>",    "title": "check status",    "version": "1.0.0",    "description": "<p>Returns the status of a job.</p>",    "name": "edit_job_get",    "group": "edit",    "parameter": {      "fields": {        "URL Param": [          {            "group": "URL Param",            "type": "string",            "optional": false,            "field": "jobId",            "description": "<p>The jobId to get status for.</p>"          }        ]      },      "examples": [        {          "title": "HTTP Usage Template:",          "content": "GET /status/<:jobId>  HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key",          "type": "http"        },        {          "title": "Curl Usage:",          "content": "curl -H \"authorization: Bearer $token\" -H \"content-type:application/json\" -H \"x-api-key:$x-api-key\" -X GET https://image.adobe.io/lrService/status/<:jobId>",          "type": "curl"        }      ]    },    "success": {      "examples": [        {          "title": "Pending Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"pending\"\n    }\n  ]\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Succeeded Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"succeeded\",\n      \"_links\":{\n        \"self\":\n          {\n            \"href\":\"/some_project/OUTPUT/photo.jpg\",\n            \"storage\":\"adobe\"\n          }\n      }\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Failed Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"failed\",\n      \"errorDetails\":\"request parameters didn't validate\"\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Success-Response Templated:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n    \"jobId\":\"<:jobId>\",\n    \"created\":\"<YYYY-DD-MMThh:mm:ss.mmmmm:Z>\",\n    \"modified\":\"<YYYY-DD-MMThh:mm:ss.mmmmm:Z>\",\n    \"outputs\":[\n       {\n         \"input\":\"<input>\",\n         \"status\":\"<status>\",\n         \"_links\":{\n           \"self\":{\n             \"href\":\"<href>\",\n             \"storage\":\"<storage>\"\n           }\n         }\n       }\n    ],\n    \"_links\":{\n       \"self\":{\n         \"href\":\"https://image.adobe.io/lrService/status/<:jobId>\"\n       }\n    }\n}",          "type": "json"        }      ],      "fields": {        "Success 202": [          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "jobId",            "description": "<p>the job's id requested</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "created",            "description": "<p>timestamp</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "modified",            "description": "<p>timestamp</p>"          },          {            "group": "Success 202",            "type": "array",            "optional": false,            "field": "outputs",            "description": "<p>array of outputs</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.input",            "description": "<p>the original input file path</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.status",            "description": "<p>the child job status</p>  <ul>    <li>pending - request has been accepted and is waiting to start</li>    <li>running - the child job is running</li>    <li>succeeded - the child job has succeeded</li>    <li>failed - the child job has failed</li>  </ul>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "_links",            "description": "<p>include hrefs that client can use to track status</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "_links.self",            "description": "<p>the relation type</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "_links.self.href",            "description": "<p>the link to track status</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "outputs._links",            "description": "<p>include hrefs of the output location</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "outputs._links.self",            "description": "<p>the relation type</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs._links.self.href",            "description": "<p>the output location</p>"          },          {            "group": "Success 202",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\"",              "\"azure\"",              "\"dropbox\""            ],            "optional": false,            "field": "outputs._links.self.storage",            "description": "<p>the storage of output</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.details",            "description": "<p>Description of the exact error that is reported by the requested job. Will appear in the response only if there is an error.</p>"          }        ]      }    },    "filename": "./docs-src/get-edit-create.js",    "groupTitle": "edit",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "authorization",            "description": "<p>Authorization value.</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "x-api-key",            "description": "<p>a client id</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/edit",    "title": "post job",    "version": "1.0.0",    "description": "<p>Initiates an asynchronous job to apply a set of edit parameters on an image</p>",    "name": "edit_post",    "group": "edit",    "parameter": {      "fields": {        "Request": [          {            "group": "Request",            "type": "hash",            "optional": false,            "field": "inputs",            "description": "<p>A hash describing an input image to edit.</p>"          },          {            "group": "Request",            "type": "hash",            "optional": false,            "field": "inputs.source",            "description": "<p>A hash describing an input image to edit. The input object will be one of 'external', 'adobe', 'azure' or 'dropbox'</p>"          },          {            "group": "Request",            "type": "string",            "optional": false,            "field": "inputs.source.href",            "description": "<p>Either a Creative Cloud assets path for storage=&quot;adobe&quot; OR a presignedGetURL</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\"",              "\"azure\"",              "\"dropbox\""            ],            "optional": true,            "field": "inputs.source.storage",            "defaultValue": "adobe",            "description": "<p>is the asset stored on Adobe's cloud or an external service (like AWS S3)</p>"          },          {            "group": "Request",            "type": "hash",            "optional": false,            "field": "options",            "description": "<p>A hash describing the list of edits to apply.</p>"          },          {            "group": "Request",            "type": "int",            "allowedValues": [              "-100...100"            ],            "optional": false,            "field": "inputs.edit.Contrast",            "description": ""          },          {            "group": "Request",            "type": "int",            "allowedValues": [              "-100...100"            ],            "optional": false,            "field": "inputs.edit.Saturation",            "description": ""          },          {            "group": "Request",            "type": "int",            "allowedValues": [              "-100...100"            ],            "optional": false,            "field": "inputs.edit.VignetteAmount",            "description": ""          },          {            "group": "Request",            "type": "int",            "allowedValues": [              "-100...100"            ],            "optional": false,            "field": "inputs.edit.Vibrance",            "description": ""          },          {            "group": "Request",            "type": "int",            "allowedValues": [              "-100...100"            ],            "optional": false,            "field": "inputs.edit.Highlights",            "description": ""          },          {            "group": "Request",            "type": "int",            "allowedValues": [              "-100...100"            ],            "optional": false,            "field": "inputs.edit.Shadows",            "description": ""          },          {            "group": "Request",            "type": "int",            "allowedValues": [              "-100...100"            ],            "optional": false,            "field": "inputs.edit.Whites",            "description": ""          },          {            "group": "Request",            "type": "int",            "allowedValues": [              "-100...100"            ],            "optional": false,            "field": "inputs.edit.Blacks",            "description": ""          },          {            "group": "Request",            "type": "int",            "allowedValues": [              "-100...100"            ],            "optional": false,            "field": "inputs.edit.Clarity",            "description": ""          },          {            "group": "Request",            "type": "int",            "allowedValues": [              "-100...100"            ],            "optional": false,            "field": "inputs.edit.Dehaze",            "description": ""          },          {            "group": "Request",            "type": "int",            "allowedValues": [              "-100...100"            ],            "optional": false,            "field": "inputs.edit.Texture",            "description": ""          },          {            "group": "Request",            "type": "int",            "allowedValues": [              "0...150"            ],            "optional": false,            "field": "inputs.edit.Sharpness",            "description": ""          },          {            "group": "Request",            "type": "int",            "allowedValues": [              "0...100"            ],            "optional": false,            "field": "inputs.edit.ColorNoiseReduction",            "description": ""          },          {            "group": "Request",            "type": "int",            "allowedValues": [              "0...100"            ],            "optional": false,            "field": "inputs.edit.NoiseReduction",            "description": ""          },          {            "group": "Request",            "type": "int",            "allowedValues": [              "0...100"            ],            "optional": false,            "field": "inputs.edit.SharpenDetail",            "description": ""          },          {            "group": "Request",            "type": "int",            "allowedValues": [              "0...10"            ],            "optional": false,            "field": "inputs.edit.SharpenEdgeMasking",            "description": ""          },          {            "group": "Request",            "type": "real",            "allowedValues": [              "-5.00...5.00"            ],            "optional": false,            "field": "inputs.edit.Exposure",            "description": ""          },          {            "group": "Request",            "type": "real",            "allowedValues": [              "0.5...3.0"            ],            "optional": false,            "field": "inputs.edit.SharpenRadius",            "description": ""          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"As Shot\"",              "\"Auto\"",              "\"Cloudy\"",              "\"Custom\"",              "\"Daylight\"",              "\"Flash\"",              "\"Fluorescent\"",              "\"Shade\"",              "\"Tungsten\""            ],            "optional": false,            "field": "inputs.edit.WhiteBalance",            "description": ""          },          {            "group": "Request",            "type": "array",            "optional": false,            "field": "outputs",            "description": "<p>array of output objects</p>"          },          {            "group": "Request",            "type": "string",            "optional": false,            "field": "outputs.href",            "description": "<p>Either a Creative Cloud assets path for storage=&quot;adobe&quot; OR a presignedPutURL</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\"",              "\"azure\"",              "\"dropbox\""            ],            "optional": true,            "field": "outputs.storage",            "defaultValue": "adobe",            "description": "<p>see the input.storage key.</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"image/jpeg\"",              "\"image/x-adobe-dng\"",              "\"image/png\""            ],            "optional": true,            "field": "outputs.type",            "defaultValue": "image/jpeg",            "description": "<p>outputs.type desired image format.</p>"          },          {            "group": "Request",            "type": "boolean",            "allowedValues": [              "true",              "false"            ],            "optional": true,            "field": "outputs.overwrite",            "defaultValue": "true",            "description": "<p>outputs.overwrite=true if the output file already exists should it be overwritten. Will eventually support eTags</p>"          }        ]      },      "examples": [        {          "title": "HTTP Usage Templated:",          "content": "POST /edit HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\n{\n  \"inputs\":{\n    \"source\": {\n      \"href\": \"/files/input.jpg\",\n      \"storage\": \"adobe\"\n    }\n  },\n  \"options\": {\n    \"Brightness\": <-100 to 100>,\n    \"Exposure\": <-5.00 to 5.00>,\n    \"Contrast\": <-100 to 100>,\n    \"WhiteBalance\": <\"As Shot\", \"Auto\", \"Cloudy\", \"Custom\", \"Daylight\", \"Flash\", \"Fluorescent\", \"Shade\", \"Tungsten\">,\n    \"Saturation\": <-100 to 100>,\n    \"Sharpness\": <0 to 150>,\n    \"ColorNoiseReduction\": <0 to 100>,\n    \"NoiseReduction\": <0 to 100>,\n    \"VignetteAmount\": <-100 to 100>,\n    \"Vibrance\": <-100 to 100>,\n    \"Highlights\": <-100 to 100>,\n    \"Shadows\": <-100 to 100>,\n    \"Whites\": <-100 to 100>,\n    \"Blacks\": <-100 to 100>,\n    \"Clarity\": <-100 to 100>,\n    \"Dehaze\": <-100 to 100>,\n    \"SharpenRadius\": <0.5 to 3.0>,\n    \"SharpenDetail\": <0 to 100>,\n    \"SharpenEdgeMasking\": <0 to 10>\n  },\n  \"outputs\": [\n    {\n      \"href\": \"<presigned_getURL> or <cc_storage_location\",\n      \"storage\": \"<storage>\",\n      \"type\": \"<type>\",\n      \"overwrite\":<overwrite>\n    }\n  ]\n}",          "type": "http"        },        {          "title": "HTTP Example(CC Asset):",          "content": "POST /edit HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\n{\n  \"inputs\":{\n    \"source\": {\n      \"href\": \"/files/input.jpg\",\n      \"storage\": \"adobe\"\n    }\n  },\n  \"options\": {\n    \"Exposure\": -5.00,\n    \"Contrast\": -100,\n    \"Sharpness\": 10,\n    \"WhiteBalance\": \"As Shot\",\n    \"Saturation\": -100,\n    \"Sharpness\": 20,\n    \"ColorNoiseReduction\": 15,\n    \"NoiseReduction\": 15,\n    \"VignetteAmount\": -100,\n    \"Vibrance\": -100,\n    \"Highlights\": -100,\n    \"Shadows\": -100,\n    \"Whites\": -100,\n    \"Blacks\": -100,\n    \"Clarity\": -100,\n    \"Dehaze\": -100,\n    \"SharpenRadius\": 1.1,\n    \"SharpenDetail\": 0,\n    \"SharpenEdgeMasking\": 0\n  },\n  \"outputs\": [\n    {\n      \"href\": \"/files/output.jpg\",\n      \"storage\": \"adobe\",\n      \"type\": \"image/jpeg\",\n      \"overwrite\": true\n    }\n  ]\n}",          "type": "http"        },        {          "title": "HTTP Example(External Asset):",          "content": "POST /edit HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\n{\n  \"inputs\":{\n    \"source\": {\n      \"href\": \"https://some-bucket-us-east-1.amazonaws.com/s3_presigned_getObject...\",\n      \"storage\": \"external\"\n    }\n  },\n  \"options\": {\n    \"Exposure\": -5.00,\n    \"Contrast\": -100,\n    \"Sharpness\": 10,\n    \"WhiteBalance\": \"As Shot\",\n    \"Saturation\": -100,\n    \"Sharpness\": 20,\n    \"ColorNoiseReduction\": 15,\n    \"NoiseReduction\": 15,\n    \"VignetteAmount\": -100,\n    \"Vibrance\": -100,\n    \"Highlights\": -100,\n    \"Shadows\": -100,\n    \"Whites\": -100,\n    \"Blacks\": -100,\n    \"Clarity\": -100,\n    \"Dehaze\": -100,\n    \"SharpenRadius\": 1.1,\n    \"SharpenDetail\": 0,\n    \"SharpenEdgeMasking\": 0\n  },\n  \"outputs\": [\n    {\n      \"href\": \"https://some-bucket-us-east-1.amazonaws.com/s3_presigned_putObject..\",\n      \"storage\": \"external\",\n      \"type\": \"image/jpeg\",\n      \"overwrite\": true\n    }\n  ]\n}",          "type": "http"        },        {          "title": "Curl Usage:",          "content": "curl -H \"authorization: Bearer $token\" -H \"Content-Type:application/json\" -H \"x-api-key:$x-api-key\" -X POST -d '{\"inputs\":{\"href\":\"<href>\",\"storage\":\"<storage>\"}, \"options\": \"<options>\", \"outputs\":[{\"href\":\"<href>\",\"storage\":\"<storage>\",\"type\":\"<type>\"}]}' https://image.adobe.io/lrService/edit",          "type": "curl"        }      ]    },    "filename": "./docs-src/post-edit-create.js",    "groupTitle": "edit",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "authorization",            "description": "<p>Authorization value.</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "x-api-key",            "description": "<p>a client id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 202": [          {            "group": "Success 202",            "type": "json",            "optional": false,            "field": "_links",            "description": "<p>hrefs the client can use to get status of the asynchronous job</p>"          }        ]      },      "examples": [        {          "title": "Success-Response Templated:",          "content": "HTTP/1.1 202 ACCEPTED\nContent-Type: application/json\n{\n  \"_links\": {\n     \"self\" :{\n       \"href\" : \"https://image.adobe.io/lrService/status/<:jobId>\"\n     }\n  }\n}",          "type": "json"        },        {          "title": "Success-Response Example:",          "content": "HTTP/1.1 202 ACCEPTED\nContent-Type: application/json\n{\n  \"_links\": {\n     \"self\" :{\n       \"href\" : \"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n     }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "string",            "optional": false,            "field": "type",            "description": "<p>a machine-readable error code</p>"          },          {            "group": "Error 4xx",            "type": "string",            "optional": false,            "field": "title",            "description": "<p>short, human-readable summary of the problem</p>"          },          {            "group": "Error 4xx",            "type": "array",            "optional": true,            "field": "details",            "description": "<p>further descriptions of the exact error where <code>details</code> is substituted for a specific issue</p>"          }        ]      },      "examples": [        {          "title": "Error-Response Templeted:",          "content": "HTTP/1.1 <Status_Code> <Reason>\nContent-Type: application/json\n{\n  \"type\": \"<errorCode>\",\n  \"title\": \"<errorDescription>\",\n  \"<details>\": [\n    {\n      \"name\":\"<paramName>\",\n      \"reason\":\"<error>\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "Example FileExistsError:",          "content": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n{\n  \"type\": \"FileExistsError\",\n  \"title\": \"File does not exist\"\n}",          "type": "json"        },        {          "title": "Example InputValidationError:",          "content": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n{\n  \"type\": \"InputValidationError\",\n  \"title\": \"request parameters didn't validate\",\n  \"invalidParams\": [\n    {\n      \"name\":\"storage\",\n      \"reason\":\"value must be either 'adobe' or 'external'\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "Example AuthorizationError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"AuthorizationError\",\n  \"title\": \"Invalid API key or missing auth token\"\n}",          "type": "json"        },        {          "title": "Example MissingAuthTokenError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"MissingAuthTokenError\",\n  \"title\": \"Auth token is missing\"\n}",          "type": "json"        },        {          "title": "Example InvalidAuthTokenError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"InvalidAuthTokenError\",\n  \"title\": \"Auth token is invalid\"\n}",          "type": "json"        },        {          "title": "Example ResourceNotFoundError:",          "content": "HTTP/1.1 404 Not Found\nContent-Type: application/json\n{\n  \"type\": \"ResourceNotFoundError\",\n  \"title\": \"Requested resource was not found\"\n}",          "type": "json"        },        {          "title": "Example InvalidContentTypeError:",          "content": "HTTP/1.1 415 Unsupported Media Type\nContent-Type: application/json\n{\n  \"type\": \"InvalidContentTypeError\",\n  \"title\": \"Invalid content type\"\n}",          "type": "json"        },        {          "title": "Example UndefinedError:",          "content": "HTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n{\n  \"type\": \"UndefinedError\",\n  \"title\": \"Undefined Error\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/status/<:jobId>",    "title": "check status",    "version": "1.0.0",    "description": "<p>Returns the status of a job.</p>",    "name": "presets_job_get",    "group": "presets",    "parameter": {      "fields": {        "URL Param": [          {            "group": "URL Param",            "type": "string",            "optional": false,            "field": "jobId",            "description": "<p>The jobId to get status for.</p>"          }        ]      },      "examples": [        {          "title": "HTTP Usage Template:",          "content": "GET /status/<:jobId>  HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key",          "type": "http"        },        {          "title": "Curl Usage:",          "content": "curl -H \"authorization: Bearer $token\" -H \"content-type:application/json\" -H \"x-api-key:$x-api-key\" -X GET https://image.adobe.io/lrService/status/<:jobId>",          "type": "curl"        }      ]    },    "success": {      "examples": [        {          "title": "Pending Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"pending\"\n    }\n  ]\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Succeeded Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"succeeded\",\n      \"_links\":{\n        \"self\":\n          {\n            \"href\":\"/some_project/OUTPUT/photo.jpg\",\n            \"storage\":\"adobe\"\n          }\n      }\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Failed Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"failed\",\n      \"errorDetails\":\"request parameters didn't validate\"\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Success-Response Templated:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n    \"jobId\":\"<:jobId>\",\n    \"created\":\"<YYYY-DD-MMThh:mm:ss.mmmmm:Z>\",\n    \"modified\":\"<YYYY-DD-MMThh:mm:ss.mmmmm:Z>\",\n    \"outputs\":[\n       {\n         \"input\":\"<input>\",\n         \"status\":\"<status>\",\n         \"_links\":{\n           \"self\":{\n             \"href\":\"<href>\",\n             \"storage\":\"<storage>\"\n           }\n         }\n       }\n    ],\n    \"_links\":{\n       \"self\":{\n         \"href\":\"https://image.adobe.io/lrService/status/<:jobId>\"\n       }\n    }\n}",          "type": "json"        }      ],      "fields": {        "Success 202": [          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "jobId",            "description": "<p>the job's id requested</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "created",            "description": "<p>timestamp</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "modified",            "description": "<p>timestamp</p>"          },          {            "group": "Success 202",            "type": "array",            "optional": false,            "field": "outputs",            "description": "<p>array of outputs</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.input",            "description": "<p>the original input file path</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.status",            "description": "<p>the child job status</p>  <ul>    <li>pending - request has been accepted and is waiting to start</li>    <li>running - the child job is running</li>    <li>succeeded - the child job has succeeded</li>    <li>failed - the child job has failed</li>  </ul>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "_links",            "description": "<p>include hrefs that client can use to track status</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "_links.self",            "description": "<p>the relation type</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "_links.self.href",            "description": "<p>the link to track status</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "outputs._links",            "description": "<p>include hrefs of the output location</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "outputs._links.self",            "description": "<p>the relation type</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs._links.self.href",            "description": "<p>the output location</p>"          },          {            "group": "Success 202",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\"",              "\"azure\"",              "\"dropbox\""            ],            "optional": false,            "field": "outputs._links.self.storage",            "description": "<p>the storage of output</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.details",            "description": "<p>Description of the exact error that is reported by the requested job. Will appear in the response only if there is an error.</p>"          }        ]      }    },    "filename": "./docs-src/get-presets-create.js",    "groupTitle": "presets",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "authorization",            "description": "<p>Authorization value.</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "x-api-key",            "description": "<p>a client id</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/presets",    "title": "post job",    "version": "1.0.0",    "description": "<p>Initiates an asynchronous job to apply a preset on an image</p>",    "name": "presets_post",    "group": "presets",    "parameter": {      "fields": {        "Request": [          {            "group": "Request",            "type": "hash",            "optional": false,            "field": "inputs",            "description": "<p>A hash describing an input image to edit and the presets to apply.</p>"          },          {            "group": "Request",            "type": "hash",            "optional": false,            "field": "inputs.source",            "description": "<p>A hash describing an input image to edit. The input object will be one of 'external', 'adobe', 'azure' or 'dropbox'</p>"          },          {            "group": "Request",            "type": "string",            "optional": false,            "field": "inputs.source.href",            "description": "<p>Either a Creative Cloud assets path for storage=&quot;adobe&quot; OR a presignedGetURL</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\"",              "\"azure\"",              "\"dropbox\""            ],            "optional": true,            "field": "inputs.source.storage",            "defaultValue": "adobe",            "description": "<p>is the asset stored on Adobe's cloud or an external service (like AWS S3)</p>"          },          {            "group": "Request",            "type": "array",            "optional": false,            "field": "inputs.presets",            "description": "<p>An array describing the list of presets to apply. The preset objects will either be one of 'external', 'adobe', 'azure' or 'dropbox'</p>"          },          {            "group": "Request",            "type": "string",            "optional": false,            "field": "inputs.presets.href",            "description": "<p>Either a Creative Cloud assets path for storage=&quot;adobe&quot; OR a presignedGetURL</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\"",              "\"azure\"",              "\"dropbox\""            ],            "optional": true,            "field": "inputs.presets.storage",            "defaultValue": "adobe",            "description": "<p>is the asset stored on Adobe's cloud or an external service (like AWS S3)</p>"          },          {            "group": "Request",            "type": "array",            "optional": false,            "field": "outputs",            "description": "<p>array of output objects</p>"          },          {            "group": "Request",            "type": "string",            "optional": false,            "field": "outputs.href",            "description": "<p>Either a Creative Cloud assets path for storage=&quot;adobe&quot; OR a presignedPutURL</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\"",              "\"azure\"",              "\"dropbox\""            ],            "optional": true,            "field": "outputs.storage",            "defaultValue": "adobe",            "description": "<p>see the input.storage key.</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"image/jpeg\"",              "\"image/x-adobe-dng\"",              "\"image/png\""            ],            "optional": true,            "field": "outputs.type",            "defaultValue": "image/jpeg",            "description": "<p>outputs.type desired image format.</p>"          },          {            "group": "Request",            "type": "boolean",            "allowedValues": [              "true",              "false"            ],            "optional": true,            "field": "outputs.overwrite",            "defaultValue": "true",            "description": "<p>outputs.overwrite=true if the output file already exists should it be overwritten. Will eventually support eTags</p>"          }        ]      },      "examples": [        {          "title": "HTTP Usage Templated:",          "content": "POST /presets HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\n{\n  \"inputs\":{\n    \"source\": {\n      \"href\": \"<presigned_getURL> or <cc_storage_location>\",\n      \"storage\": \"<storage>\"\n    },\n    \"presets\": [\n      {\n        \"href\": \"<presigned_getURL> or <cc_storage_location>\",\n        \"storage\": \"<storage>\"\n      }\n    ]\n  },\n  \"outputs\": [\n    {\n      \"href\": \"<presigned_getURL> or <cc_storage_location\",\n      \"storage\": \"<storage>\",\n      \"type\": \"<type>\",\n      \"overwrite\":<overwrite>\n    }\n  ]\n}",          "type": "http"        },        {          "title": "HTTP Example(CC Asset):",          "content": "POST /presets HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\n{\n  \"inputs\":{\n    \"source\": {\n      \"href\": \"/files/input.jpg\",\n      \"storage\": \"adobe\"\n    },\n    \"presets\": [\n      {\n        \"href\": \"files/acr/preset.xmp\",\n        \"storage\": \"adobe\"\n      }\n    ]\n  },\n  \"outputs\": [\n    {\n      \"href\": \"/files/output.jpg\",\n      \"storage\": \"adobe\",\n      \"type\": \"image/jpeg\",\n      \"overwrite\": true\n    }\n  ]\n}",          "type": "http"        },        {          "title": "HTTP Example(External Asset):",          "content": "POST /presets HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\n{\n  \"inputs\":{\n    \"source\": {\n      \"href\": \"https://some-bucket-us-east-1.amazonaws.com/s3_presigned_getObject...\",\n      \"storage\": \"external\"\n    },\n    \"presets\": [\n      {\n        \"href\":  \"https://some-bucket-us-east-1.amazonaws.com/s3_presigned_getObject...\",\n        \"storage\": \"external\"\n      }\n    ]\n  },\n  \"outputs\": [\n    {\n      \"href\": \"https://some-bucket-us-east-1.amazonaws.com/s3_presigned_putObject..\",\n      \"storage\": \"external\",\n      \"type\": \"image/jpeg\",\n      \"overwrite\": true\n    }\n  ]\n}",          "type": "http"        },        {          "title": "Curl Usage:",          "content": "curl -H \"authorization: Bearer $token\" -H \"Content-Type:application/json\" -H \"x-api-key:$x-api-key\" -X POST -d '{\"inputs\": {\"source\": {\"href\":\"<href>\",\"storage\":\"<storage>\"}, \"presets\": [{\"href\":\"<href>\",\"storage\":\"<storage>\"}]},\"outputs\":[{\"href\":\"<href>\",\"storage\":\"<storage>\",\"type\":\"<type>\"}]}' https://image.adobe.io/lrService/presets",          "type": "curl"        }      ]    },    "filename": "./docs-src/post-presets-create.js",    "groupTitle": "presets",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "authorization",            "description": "<p>Authorization value.</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "x-api-key",            "description": "<p>a client id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 202": [          {            "group": "Success 202",            "type": "json",            "optional": false,            "field": "_links",            "description": "<p>hrefs the client can use to get status of the asynchronous job</p>"          }        ]      },      "examples": [        {          "title": "Success-Response Templated:",          "content": "HTTP/1.1 202 ACCEPTED\nContent-Type: application/json\n{\n  \"_links\": {\n     \"self\" :{\n       \"href\" : \"https://image.adobe.io/lrService/status/<:jobId>\"\n     }\n  }\n}",          "type": "json"        },        {          "title": "Success-Response Example:",          "content": "HTTP/1.1 202 ACCEPTED\nContent-Type: application/json\n{\n  \"_links\": {\n     \"self\" :{\n       \"href\" : \"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n     }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "string",            "optional": false,            "field": "type",            "description": "<p>a machine-readable error code</p>"          },          {            "group": "Error 4xx",            "type": "string",            "optional": false,            "field": "title",            "description": "<p>short, human-readable summary of the problem</p>"          },          {            "group": "Error 4xx",            "type": "array",            "optional": true,            "field": "details",            "description": "<p>further descriptions of the exact error where <code>details</code> is substituted for a specific issue</p>"          }        ]      },      "examples": [        {          "title": "Error-Response Templeted:",          "content": "HTTP/1.1 <Status_Code> <Reason>\nContent-Type: application/json\n{\n  \"type\": \"<errorCode>\",\n  \"title\": \"<errorDescription>\",\n  \"<details>\": [\n    {\n      \"name\":\"<paramName>\",\n      \"reason\":\"<error>\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "Example FileExistsError:",          "content": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n{\n  \"type\": \"FileExistsError\",\n  \"title\": \"File does not exist\"\n}",          "type": "json"        },        {          "title": "Example InputValidationError:",          "content": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n{\n  \"type\": \"InputValidationError\",\n  \"title\": \"request parameters didn't validate\",\n  \"invalidParams\": [\n    {\n      \"name\":\"storage\",\n      \"reason\":\"value must be either 'adobe' or 'external'\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "Example AuthorizationError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"AuthorizationError\",\n  \"title\": \"Invalid API key or missing auth token\"\n}",          "type": "json"        },        {          "title": "Example MissingAuthTokenError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"MissingAuthTokenError\",\n  \"title\": \"Auth token is missing\"\n}",          "type": "json"        },        {          "title": "Example InvalidAuthTokenError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"InvalidAuthTokenError\",\n  \"title\": \"Auth token is invalid\"\n}",          "type": "json"        },        {          "title": "Example ResourceNotFoundError:",          "content": "HTTP/1.1 404 Not Found\nContent-Type: application/json\n{\n  \"type\": \"ResourceNotFoundError\",\n  \"title\": \"Requested resource was not found\"\n}",          "type": "json"        },        {          "title": "Example InvalidContentTypeError:",          "content": "HTTP/1.1 415 Unsupported Media Type\nContent-Type: application/json\n{\n  \"type\": \"InvalidContentTypeError\",\n  \"title\": \"Invalid content type\"\n}",          "type": "json"        },        {          "title": "Example UndefinedError:",          "content": "HTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n{\n  \"type\": \"UndefinedError\",\n  \"title\": \"Undefined Error\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/status/<:jobId>",    "title": "check status",    "version": "1.0.0",    "description": "<p>Returns the status of a job.</p>",    "name": "xmp_job_get",    "group": "xmp",    "parameter": {      "fields": {        "URL Param": [          {            "group": "URL Param",            "type": "string",            "optional": false,            "field": "jobId",            "description": "<p>The jobId to get status for.</p>"          }        ]      },      "examples": [        {          "title": "HTTP Usage Template:",          "content": "GET /status/<:jobId>  HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key",          "type": "http"        },        {          "title": "Curl Usage:",          "content": "curl -H \"authorization: Bearer $token\" -H \"content-type:application/json\" -H \"x-api-key:$x-api-key\" -X GET https://image.adobe.io/lrService/status/<:jobId>",          "type": "curl"        }      ]    },    "success": {      "examples": [        {          "title": "Pending Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"pending\"\n    }\n  ]\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Succeeded Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"succeeded\",\n      \"_links\":{\n        \"self\":\n          {\n            \"href\":\"/some_project/OUTPUT/photo.jpg\",\n            \"storage\":\"adobe\"\n          }\n      }\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Failed Job Example:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n  \"jobId\":\"f54e0fcb-260b-47c3-b520-de0d17dc2b67\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n    {\n      \"input\":\"/some_project/photo.jpg\",\n      \"status\":\"failed\",\n      \"errorDetails\":\"request parameters didn't validate\"\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Success-Response Templated:",          "content": "HTTP/1.1 202\nContent-Type: application/json\n{\n    \"jobId\":\"<:jobId>\",\n    \"created\":\"<YYYY-DD-MMThh:mm:ss.mmmmm:Z>\",\n    \"modified\":\"<YYYY-DD-MMThh:mm:ss.mmmmm:Z>\",\n    \"outputs\":[\n       {\n         \"input\":\"<input>\",\n         \"status\":\"<status>\",\n         \"_links\":{\n           \"self\":{\n             \"href\":\"<href>\",\n             \"storage\":\"<storage>\"\n           }\n         }\n       }\n    ],\n    \"_links\":{\n       \"self\":{\n         \"href\":\"https://image.adobe.io/lrService/status/<:jobId>\"\n       }\n    }\n}",          "type": "json"        }      ],      "fields": {        "Success 202": [          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "jobId",            "description": "<p>the job's id requested</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "created",            "description": "<p>timestamp</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "modified",            "description": "<p>timestamp</p>"          },          {            "group": "Success 202",            "type": "array",            "optional": false,            "field": "outputs",            "description": "<p>array of outputs</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.input",            "description": "<p>the original input file path</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.status",            "description": "<p>the child job status</p>  <ul>    <li>pending - request has been accepted and is waiting to start</li>    <li>running - the child job is running</li>    <li>succeeded - the child job has succeeded</li>    <li>failed - the child job has failed</li>  </ul>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "_links",            "description": "<p>include hrefs that client can use to track status</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "_links.self",            "description": "<p>the relation type</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "_links.self.href",            "description": "<p>the link to track status</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "outputs._links",            "description": "<p>include hrefs of the output location</p>"          },          {            "group": "Success 202",            "type": "hash",            "optional": false,            "field": "outputs._links.self",            "description": "<p>the relation type</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs._links.self.href",            "description": "<p>the output location</p>"          },          {            "group": "Success 202",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\"",              "\"azure\"",              "\"dropbox\""            ],            "optional": false,            "field": "outputs._links.self.storage",            "description": "<p>the storage of output</p>"          },          {            "group": "Success 202",            "type": "string",            "optional": false,            "field": "outputs.details",            "description": "<p>Description of the exact error that is reported by the requested job. Will appear in the response only if there is an error.</p>"          }        ]      }    },    "filename": "./docs-src/get-xmp-create.js",    "groupTitle": "xmp",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "authorization",            "description": "<p>Authorization value.</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "x-api-key",            "description": "<p>a client id</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/xmp",    "title": "post job",    "version": "1.0.0",    "description": "<p>Initiates an asynchronous job to apply an XMP setting to an image</p>",    "name": "xmp_post",    "group": "xmp",    "parameter": {      "fields": {        "Request": [          {            "group": "Request",            "type": "hash",            "optional": false,            "field": "inputs",            "description": "<p>A hash describing an input image to edit.</p>"          },          {            "group": "Request",            "type": "hash",            "optional": false,            "field": "inputs.source",            "description": "<p>A hash describing an input image to edit. The input object will be one of 'external', 'adobe', 'azure' or 'dropbox'</p>"          },          {            "group": "Request",            "type": "string",            "optional": false,            "field": "inputs.source.href",            "description": "<p>Either a Creative Cloud assets path for storage=&quot;adobe&quot; OR a presignedGetURL</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\"",              "\"azure\"",              "\"dropbox\""            ],            "optional": true,            "field": "inputs.source.storage",            "defaultValue": "adobe",            "description": "<p>is the asset stored on Adobe's cloud or an external service (like AWS S3)</p>"          },          {            "group": "Request",            "type": "hash",            "optional": false,            "field": "options",            "description": "<p>a hash describing the xmp to apply.</p>"          },          {            "group": "Request",            "type": "string",            "optional": false,            "field": "options.xmp",            "description": "<p>The XMP to apply.</p>"          },          {            "group": "Request",            "type": "array",            "optional": false,            "field": "outputs",            "description": "<p>array of output objects</p>"          },          {            "group": "Request",            "type": "string",            "optional": false,            "field": "outputs.href",            "description": "<p>Either a Creative Cloud assets path for storage=&quot;adobe&quot; OR a presignedPutURL</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"adobe\"",              "\"external\"",              "\"azure\"",              "\"dropbox\""            ],            "optional": true,            "field": "outputs.storage",            "defaultValue": "adobe",            "description": "<p>see the input.storage key.</p>"          },          {            "group": "Request",            "type": "string",            "allowedValues": [              "\"image/jpeg\"",              "\"image/x-adobe-dng\"",              "\"image/png\""            ],            "optional": true,            "field": "outputs.type",            "defaultValue": "image/jpeg",            "description": "<p>outputs.type desired image format.</p>"          },          {            "group": "Request",            "type": "boolean",            "allowedValues": [              "true",              "false"            ],            "optional": true,            "field": "outputs.overwrite",            "defaultValue": "true",            "description": "<p>outputs.overwrite=true if the output file already exists should it be overwritten. Will eventually support eTags</p>"          }        ]      },      "examples": [        {          "title": "HTTP Usage Templated:",          "content": "POST /xmp HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\n{\n  \"inputs\":{\n    \"source\": {\n      \"href\": \"<presigned_getURL> or <cc_storage_location>\",\n      \"storage\": \"<storage>\"\n    }\n  },\n  \"options\": {\n    \"xmp\": \"<xmp>\"\n  },\n  \"outputs\": [\n    {\n      \"href\": \"<presigned_getURL> or <cc_storage_location\",\n      \"storage\": \"<storage>\",\n      \"type\": \"<type>\",\n      \"overwrite\":<overwrite>\n    }\n  ]\n}",          "type": "http"        },        {          "title": "HTTP Example(CC Asset):",          "content": "POST /xmp HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\n{\n  \"inputs\":{\n    \"source\": {\n      \"href\": \"/files/input.jpg\",\n      \"storage\": \"adobe\"\n    }\n  },\n  \"options\": {\n    \"xmp\": \"<x:xmpmeta xmlns:x=\\\"adobe:ns:meta\\/\\\" x:xmptk=\\\"Adobe XMP Core 5.6-c140 79.160451, 2017\\/05\\/06-01:08:21        \\\"> <rdf:RDF xmlns:rdf=\\\"http:\\/\\/www.w3.org\\/1999\\/02\\/22-rdf-syntax-ns#\\\"> <rdf:Description rdf:about=\\\"\\\" xmlns:crs=\\\"http:\\/\\/ns.adobe.com\\/camera-raw-settings\\/1.0\\/\\\" crs:Version=\\\"11.4.1\\\" crs:ProcessVersion=\\\"11.0\\\" crs:WhiteBalance=\\\"Custom\\\" crs:IncrementalTemperature=\\\"+54\\\" crs:IncrementalTint=\\\"0\\\" crs:Saturation=\\\"+81\\\" crs:Sharpness=\\\"0\\\" crs:LuminanceSmoothing=\\\"0\\\" crs:ColorNoiseReduction=\\\"0\\\" crs:VignetteAmount=\\\"0\\\" crs:ShadowTint=\\\"0\\\" crs:RedHue=\\\"0\\\" crs:RedSaturation=\\\"0\\\" crs:GreenHue=\\\"0\\\" crs:GreenSaturation=\\\"0\\\" crs:BlueHue=\\\"0\\\" crs:BlueSaturation=\\\"0\\\" crs:Vibrance=\\\"+84\\\" crs:HueAdjustmentRed=\\\"0\\\" crs:HueAdjustmentOrange=\\\"0\\\" crs:HueAdjustmentYellow=\\\"0\\\" crs:HueAdjustmentGreen=\\\"0\\\" crs:HueAdjustmentAqua=\\\"0\\\" crs:HueAdjustmentBlue=\\\"0\\\" crs:HueAdjustmentPurple=\\\"0\\\" crs:HueAdjustmentMagenta=\\\"0\\\" crs:SaturationAdjustmentRed=\\\"0\\\" crs:SaturationAdjustmentOrange=\\\"0\\\" crs:SaturationAdjustmentYellow=\\\"0\\\" crs:SaturationAdjustmentGreen=\\\"0\\\" crs:SaturationAdjustmentAqua=\\\"0\\\" crs:SaturationAdjustmentBlue=\\\"0\\\" crs:SaturationAdjustmentPurple=\\\"0\\\" crs:SaturationAdjustmentMagenta=\\\"0\\\" crs:LuminanceAdjustmentRed=\\\"0\\\" crs:LuminanceAdjustmentOrange=\\\"0\\\" crs:LuminanceAdjustmentYellow=\\\"0\\\" crs:LuminanceAdjustmentGreen=\\\"0\\\" crs:LuminanceAdjustmentAqua=\\\"0\\\" crs:LuminanceAdjustmentBlue=\\\"0\\\" crs:LuminanceAdjustmentPurple=\\\"0\\\" crs:LuminanceAdjustmentMagenta=\\\"0\\\" crs:SplitToningShadowHue=\\\"0\\\" crs:SplitToningShadowSaturation=\\\"0\\\" crs:SplitToningHighlightHue=\\\"0\\\" crs:SplitToningHighlightSaturation=\\\"0\\\" crs:SplitToningBalance=\\\"0\\\" crs:ParametricShadows=\\\"0\\\" crs:ParametricDarks=\\\"0\\\" crs:ParametricLights=\\\"0\\\" crs:ParametricHighlights=\\\"0\\\" crs:ParametricShadowSplit=\\\"25\\\" crs:ParametricMidtoneSplit=\\\"50\\\" crs:ParametricHighlightSplit=\\\"75\\\" crs:SharpenRadius=\\\"+1.0\\\" crs:SharpenDetail=\\\"25\\\" crs:SharpenEdgeMasking=\\\"0\\\" crs:PostCropVignetteAmount=\\\"0\\\" crs:GrainAmount=\\\"0\\\" crs:LensProfileEnable=\\\"0\\\" crs:LensManualDistortionAmount=\\\"0\\\" crs:PerspectiveVertical=\\\"0\\\" crs:PerspectiveHorizontal=\\\"0\\\" crs:PerspectiveRotate=\\\"0.0\\\" crs:PerspectiveScale=\\\"100\\\" crs:PerspectiveAspect=\\\"0\\\" crs:PerspectiveUpright=\\\"5\\\" crs:PerspectiveX=\\\"0.00\\\" crs:PerspectiveY=\\\"0.00\\\" crs:AutoLateralCA=\\\"0\\\" crs:Exposure2012=\\\"0.00\\\" crs:Contrast2012=\\\"0\\\" crs:Highlights2012=\\\"0\\\" crs:Shadows2012=\\\"0\\\" crs:Whites2012=\\\"0\\\" crs:Blacks2012=\\\"0\\\" crs:Clarity2012=\\\"0\\\" crs:DefringePurpleAmount=\\\"0\\\" crs:DefringePurpleHueLo=\\\"30\\\" crs:DefringePurpleHueHi=\\\"70\\\" crs:DefringeGreenAmount=\\\"0\\\" crs:DefringeGreenHueLo=\\\"40\\\" crs:DefringeGreenHueHi=\\\"60\\\" crs:Dehaze=\\\"0\\\" crs:Texture=\\\"0\\\" crs:ToneMapStrength=\\\"0\\\" crs:ConvertToGrayscale=\\\"False\\\" crs:OverrideLookVignette=\\\"False\\\" crs:ToneCurveName=\\\"Linear\\\" crs:ToneCurveName2012=\\\"Linear\\\" crs:CameraProfile=\\\"Embedded\\\" crs:CameraProfileDigest=\\\"54650A341B5B5CCAE8442D0B43A92BCE\\\" crs:LensProfileSetup=\\\"LensDefaults\\\" crs:UprightVersion=\\\"151388160\\\" crs:UprightCenterMode=\\\"0\\\" crs:UprightCenterNormX=\\\"0.5\\\" crs:UprightCenterNormY=\\\"0.5\\\" crs:UprightFocalMode=\\\"0\\\" crs:UprightFocalLength35mm=\\\"35\\\" crs:UprightPreview=\\\"False\\\" crs:UprightGuidedDependentDigest=\\\"F7173540FD9FB419BD947A976070F4D2\\\" crs:UprightTransformCount=\\\"6\\\" crs:UprightTransform_5=\\\"1.039357088,-0.000108501,-0.003125183,-0.000018587,1.057735296,-0.010513773,0.001767865,0.034718470,1.000000000\\\" crs:UprightFourSegmentsCount=\\\"2\\\" crs:UprightFourSegments_0=\\\"0.216999993,0.850666642,0.808333337,0.851555586\\\" crs:UprightFourSegments_1=\\\"0.810999990,0.663111091,0.797666609,0.178666711\\\" crs:HasSettings=\\\"True\\\" crs:CropTop=\\\"0.019089\\\" crs:CropLeft=\\\"0.460746\\\" crs:CropBottom=\\\"0.694646\\\" crs:CropRight=\\\"0.591986\\\" crs:CropAngle=\\\"45\\\" crs:CropConstrainToWarp=\\\"0\\\" crs:HasCrop=\\\"True\\\"> <crs:ToneCurve> <rdf:Seq> <rdf:li>0, 0<\\/rdf:li> <rdf:li>255, 255<\\/rdf:li> <\\/rdf:Seq> <\\/crs:ToneCurve> <crs:ToneCurveRed> <rdf:Seq> <rdf:li>0, 0<\\/rdf:li> <rdf:li>255, 255<\\/rdf:li> <\\/rdf:Seq> <\\/crs:ToneCurveRed> <crs:ToneCurveGreen> <rdf:Seq> <rdf:li>0, 0<\\/rdf:li> <rdf:li>255, 255<\\/rdf:li> <\\/rdf:Seq> <\\/crs:ToneCurveGreen> <crs:ToneCurveBlue> <rdf:Seq> <rdf:li>0, 0<\\/rdf:li> <rdf:li>255, 255<\\/rdf:li> <\\/rdf:Seq> <\\/crs:ToneCurveBlue> <crs:ToneCurvePV2012> <rdf:Seq> <rdf:li>0, 0<\\/rdf:li> <rdf:li>255, 255<\\/rdf:li> <\\/rdf:Seq> <\\/crs:ToneCurvePV2012> <crs:ToneCurvePV2012Red> <rdf:Seq> <rdf:li>0, 0<\\/rdf:li> <rdf:li>255, 255<\\/rdf:li> <\\/rdf:Seq> <\\/crs:ToneCurvePV2012Red> <crs:ToneCurvePV2012Green> <rdf:Seq> <rdf:li>0, 0<\\/rdf:li> <rdf:li>255, 255<\\/rdf:li> <\\/rdf:Seq> <\\/crs:ToneCurvePV2012Green> <crs:ToneCurvePV2012Blue> <rdf:Seq> <rdf:li>0, 0<\\/rdf:li> <rdf:li>255, 255<\\/rdf:li> <\\/rdf:Seq> <\\/crs:ToneCurvePV2012Blue> <crs:Look crs:Name=\\\"\\\"\\/> <\\/rdf:Description> <\\/rdf:RDF> <\\/x:xmpmeta>\"\n  },\n  \"outputs\": [\n    {\n      \"href\": \"/files/output.jpg\",\n      \"storage\": \"adobe\",\n      \"type\": \"image/jpeg\",\n      \"overwrite\": true\n    }\n  ]\n}",          "type": "http"        },        {          "title": "HTTP Example(External Asset):",          "content": "POST /xmp HTTP/1.1\nHost: image.adobe.io/lrService\nContent-Type: application/json\nauthorization: Bearer $token\nx-api-key: $x-api-key\n{\n  \"inputs\":{\n    \"source\": {\n      \"href\": \"https://some-bucket-us-east-1.amazonaws.com/s3_presigned_getObject...\",\n      \"storage\": \"external\"\n    }\n  },\n  \"options\": {\n    \"xmp\": \"<x:xmpmeta xmlns:x=\\\"adobe:ns:meta\\/\\\" x:xmptk=\\\"Adobe XMP Core 5.6-c140 79.160451, 2017\\/05\\/06-01:08:21        \\\"> <rdf:RDF xmlns:rdf=\\\"http:\\/\\/www.w3.org\\/1999\\/02\\/22-rdf-syntax-ns#\\\"> <rdf:Description rdf:about=\\\"\\\" xmlns:crs=\\\"http:\\/\\/ns.adobe.com\\/camera-raw-settings\\/1.0\\/\\\" crs:Version=\\\"11.4.1\\\" crs:ProcessVersion=\\\"11.0\\\" crs:WhiteBalance=\\\"Custom\\\" crs:IncrementalTemperature=\\\"+54\\\" crs:IncrementalTint=\\\"0\\\" crs:Saturation=\\\"+81\\\" crs:Sharpness=\\\"0\\\" crs:LuminanceSmoothing=\\\"0\\\" crs:ColorNoiseReduction=\\\"0\\\" crs:VignetteAmount=\\\"0\\\" crs:ShadowTint=\\\"0\\\" crs:RedHue=\\\"0\\\" crs:RedSaturation=\\\"0\\\" crs:GreenHue=\\\"0\\\" crs:GreenSaturation=\\\"0\\\" crs:BlueHue=\\\"0\\\" crs:BlueSaturation=\\\"0\\\" crs:Vibrance=\\\"+84\\\" crs:HueAdjustmentRed=\\\"0\\\" crs:HueAdjustmentOrange=\\\"0\\\" crs:HueAdjustmentYellow=\\\"0\\\" crs:HueAdjustmentGreen=\\\"0\\\" crs:HueAdjustmentAqua=\\\"0\\\" crs:HueAdjustmentBlue=\\\"0\\\" crs:HueAdjustmentPurple=\\\"0\\\" crs:HueAdjustmentMagenta=\\\"0\\\" crs:SaturationAdjustmentRed=\\\"0\\\" crs:SaturationAdjustmentOrange=\\\"0\\\" crs:SaturationAdjustmentYellow=\\\"0\\\" crs:SaturationAdjustmentGreen=\\\"0\\\" crs:SaturationAdjustmentAqua=\\\"0\\\" crs:SaturationAdjustmentBlue=\\\"0\\\" crs:SaturationAdjustmentPurple=\\\"0\\\" crs:SaturationAdjustmentMagenta=\\\"0\\\" crs:LuminanceAdjustmentRed=\\\"0\\\" crs:LuminanceAdjustmentOrange=\\\"0\\\" crs:LuminanceAdjustmentYellow=\\\"0\\\" crs:LuminanceAdjustmentGreen=\\\"0\\\" crs:LuminanceAdjustmentAqua=\\\"0\\\" crs:LuminanceAdjustmentBlue=\\\"0\\\" crs:LuminanceAdjustmentPurple=\\\"0\\\" crs:LuminanceAdjustmentMagenta=\\\"0\\\" crs:SplitToningShadowHue=\\\"0\\\" crs:SplitToningShadowSaturation=\\\"0\\\" crs:SplitToningHighlightHue=\\\"0\\\" crs:SplitToningHighlightSaturation=\\\"0\\\" crs:SplitToningBalance=\\\"0\\\" crs:ParametricShadows=\\\"0\\\" crs:ParametricDarks=\\\"0\\\" crs:ParametricLights=\\\"0\\\" crs:ParametricHighlights=\\\"0\\\" crs:ParametricShadowSplit=\\\"25\\\" crs:ParametricMidtoneSplit=\\\"50\\\" crs:ParametricHighlightSplit=\\\"75\\\" crs:SharpenRadius=\\\"+1.0\\\" crs:SharpenDetail=\\\"25\\\" crs:SharpenEdgeMasking=\\\"0\\\" crs:PostCropVignetteAmount=\\\"0\\\" crs:GrainAmount=\\\"0\\\" crs:LensProfileEnable=\\\"0\\\" crs:LensManualDistortionAmount=\\\"0\\\" crs:PerspectiveVertical=\\\"0\\\" crs:PerspectiveHorizontal=\\\"0\\\" crs:PerspectiveRotate=\\\"0.0\\\" crs:PerspectiveScale=\\\"100\\\" crs:PerspectiveAspect=\\\"0\\\" crs:PerspectiveUpright=\\\"5\\\" crs:PerspectiveX=\\\"0.00\\\" crs:PerspectiveY=\\\"0.00\\\" crs:AutoLateralCA=\\\"0\\\" crs:Exposure2012=\\\"0.00\\\" crs:Contrast2012=\\\"0\\\" crs:Highlights2012=\\\"0\\\" crs:Shadows2012=\\\"0\\\" crs:Whites2012=\\\"0\\\" crs:Blacks2012=\\\"0\\\" crs:Clarity2012=\\\"0\\\" crs:DefringePurpleAmount=\\\"0\\\" crs:DefringePurpleHueLo=\\\"30\\\" crs:DefringePurpleHueHi=\\\"70\\\" crs:DefringeGreenAmount=\\\"0\\\" crs:DefringeGreenHueLo=\\\"40\\\" crs:DefringeGreenHueHi=\\\"60\\\" crs:Dehaze=\\\"0\\\" crs:Texture=\\\"0\\\" crs:ToneMapStrength=\\\"0\\\" crs:ConvertToGrayscale=\\\"False\\\" crs:OverrideLookVignette=\\\"False\\\" crs:ToneCurveName=\\\"Linear\\\" crs:ToneCurveName2012=\\\"Linear\\\" crs:CameraProfile=\\\"Embedded\\\" crs:CameraProfileDigest=\\\"54650A341B5B5CCAE8442D0B43A92BCE\\\" crs:LensProfileSetup=\\\"LensDefaults\\\" crs:UprightVersion=\\\"151388160\\\" crs:UprightCenterMode=\\\"0\\\" crs:UprightCenterNormX=\\\"0.5\\\" crs:UprightCenterNormY=\\\"0.5\\\" crs:UprightFocalMode=\\\"0\\\" crs:UprightFocalLength35mm=\\\"35\\\" crs:UprightPreview=\\\"False\\\" crs:UprightGuidedDependentDigest=\\\"F7173540FD9FB419BD947A976070F4D2\\\" crs:UprightTransformCount=\\\"6\\\" crs:UprightTransform_5=\\\"1.039357088,-0.000108501,-0.003125183,-0.000018587,1.057735296,-0.010513773,0.001767865,0.034718470,1.000000000\\\" crs:UprightFourSegmentsCount=\\\"2\\\" crs:UprightFourSegments_0=\\\"0.216999993,0.850666642,0.808333337,0.851555586\\\" crs:UprightFourSegments_1=\\\"0.810999990,0.663111091,0.797666609,0.178666711\\\" crs:HasSettings=\\\"True\\\" crs:CropTop=\\\"0.019089\\\" crs:CropLeft=\\\"0.460746\\\" crs:CropBottom=\\\"0.694646\\\" crs:CropRight=\\\"0.591986\\\" crs:CropAngle=\\\"45\\\" crs:CropConstrainToWarp=\\\"0\\\" crs:HasCrop=\\\"True\\\"> <crs:ToneCurve> <rdf:Seq> <rdf:li>0, 0<\\/rdf:li> <rdf:li>255, 255<\\/rdf:li> <\\/rdf:Seq> <\\/crs:ToneCurve> <crs:ToneCurveRed> <rdf:Seq> <rdf:li>0, 0<\\/rdf:li> <rdf:li>255, 255<\\/rdf:li> <\\/rdf:Seq> <\\/crs:ToneCurveRed> <crs:ToneCurveGreen> <rdf:Seq> <rdf:li>0, 0<\\/rdf:li> <rdf:li>255, 255<\\/rdf:li> <\\/rdf:Seq> <\\/crs:ToneCurveGreen> <crs:ToneCurveBlue> <rdf:Seq> <rdf:li>0, 0<\\/rdf:li> <rdf:li>255, 255<\\/rdf:li> <\\/rdf:Seq> <\\/crs:ToneCurveBlue> <crs:ToneCurvePV2012> <rdf:Seq> <rdf:li>0, 0<\\/rdf:li> <rdf:li>255, 255<\\/rdf:li> <\\/rdf:Seq> <\\/crs:ToneCurvePV2012> <crs:ToneCurvePV2012Red> <rdf:Seq> <rdf:li>0, 0<\\/rdf:li> <rdf:li>255, 255<\\/rdf:li> <\\/rdf:Seq> <\\/crs:ToneCurvePV2012Red> <crs:ToneCurvePV2012Green> <rdf:Seq> <rdf:li>0, 0<\\/rdf:li> <rdf:li>255, 255<\\/rdf:li> <\\/rdf:Seq> <\\/crs:ToneCurvePV2012Green> <crs:ToneCurvePV2012Blue> <rdf:Seq> <rdf:li>0, 0<\\/rdf:li> <rdf:li>255, 255<\\/rdf:li> <\\/rdf:Seq> <\\/crs:ToneCurvePV2012Blue> <crs:Look crs:Name=\\\"\\\"\\/> <\\/rdf:Description> <\\/rdf:RDF> <\\/x:xmpmeta>\"\n  },\n  \"outputs\": [\n    {\n      \"href\": \"https://some-bucket-us-east-1.amazonaws.com/s3_presigned_putObject..\",\n      \"storage\": \"external\",\n      \"type\": \"image/jpeg\",\n      \"overwrite\": true\n    }\n  ]\n}",          "type": "http"        },        {          "title": "Curl Usage:",          "content": "curl -H \"authorization: Bearer $token\" -H \"Content-Type:application/json\" -H \"x-api-key:$x-api-key\" -X POST -d '{\"inputs\":{\"href\":\"<href>\",\"storage\":\"<storage>\"}, \"options\": {\"xmp\": \"<xmp>\"}, \"outputs\":[{\"href\":\"<href>\",\"storage\":\"<storage>\",\"type\":\"<type>\"}]}' https://image.adobe.io/lrService/xmp",          "type": "curl"        }      ]    },    "filename": "./docs-src/post-xmp-create.js",    "groupTitle": "xmp",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "authorization",            "description": "<p>Authorization value.</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Content-Type",            "description": "<p>application/json</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "x-api-key",            "description": "<p>a client id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 202": [          {            "group": "Success 202",            "type": "json",            "optional": false,            "field": "_links",            "description": "<p>hrefs the client can use to get status of the asynchronous job</p>"          }        ]      },      "examples": [        {          "title": "Success-Response Templated:",          "content": "HTTP/1.1 202 ACCEPTED\nContent-Type: application/json\n{\n  \"_links\": {\n     \"self\" :{\n       \"href\" : \"https://image.adobe.io/lrService/status/<:jobId>\"\n     }\n  }\n}",          "type": "json"        },        {          "title": "Success-Response Example:",          "content": "HTTP/1.1 202 ACCEPTED\nContent-Type: application/json\n{\n  \"_links\": {\n     \"self\" :{\n       \"href\" : \"https://image.adobe.io/lrService/status/f54e0fcb-260b-47c3-b520-de0d17dc2b67\"\n     }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "string",            "optional": false,            "field": "type",            "description": "<p>a machine-readable error code</p>"          },          {            "group": "Error 4xx",            "type": "string",            "optional": false,            "field": "title",            "description": "<p>short, human-readable summary of the problem</p>"          },          {            "group": "Error 4xx",            "type": "array",            "optional": true,            "field": "details",            "description": "<p>further descriptions of the exact error where <code>details</code> is substituted for a specific issue</p>"          }        ]      },      "examples": [        {          "title": "Error-Response Templeted:",          "content": "HTTP/1.1 <Status_Code> <Reason>\nContent-Type: application/json\n{\n  \"type\": \"<errorCode>\",\n  \"title\": \"<errorDescription>\",\n  \"<details>\": [\n    {\n      \"name\":\"<paramName>\",\n      \"reason\":\"<error>\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "Example FileExistsError:",          "content": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n{\n  \"type\": \"FileExistsError\",\n  \"title\": \"File does not exist\"\n}",          "type": "json"        },        {          "title": "Example InputValidationError:",          "content": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n{\n  \"type\": \"InputValidationError\",\n  \"title\": \"request parameters didn't validate\",\n  \"invalidParams\": [\n    {\n      \"name\":\"storage\",\n      \"reason\":\"value must be either 'adobe' or 'external'\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "Example AuthorizationError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"AuthorizationError\",\n  \"title\": \"Invalid API key or missing auth token\"\n}",          "type": "json"        },        {          "title": "Example MissingAuthTokenError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"MissingAuthTokenError\",\n  \"title\": \"Auth token is missing\"\n}",          "type": "json"        },        {          "title": "Example InvalidAuthTokenError:",          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  \"type\": \"InvalidAuthTokenError\",\n  \"title\": \"Auth token is invalid\"\n}",          "type": "json"        },        {          "title": "Example ResourceNotFoundError:",          "content": "HTTP/1.1 404 Not Found\nContent-Type: application/json\n{\n  \"type\": \"ResourceNotFoundError\",\n  \"title\": \"Requested resource was not found\"\n}",          "type": "json"        },        {          "title": "Example InvalidContentTypeError:",          "content": "HTTP/1.1 415 Unsupported Media Type\nContent-Type: application/json\n{\n  \"type\": \"InvalidContentTypeError\",\n  \"title\": \"Invalid content type\"\n}",          "type": "json"        },        {          "title": "Example UndefinedError:",          "content": "HTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n{\n  \"type\": \"UndefinedError\",\n  \"title\": \"Undefined Error\"\n}",          "type": "json"        }      ]    }  }] });
